pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
-- game objects --
player = {
x = 1,
y = 63,
w = 2,
h = 8,
sprite = 1
}

ball = {
x = 63,
y = 63,
w = 6,
h = 6,
sprite = 2,
dir = 180,
speed = 1,
dx = 0,
dy = 0
}

function _init()
local dir = rnd_sign()*rnd(45)
ball.dir += dir
end


function _update()
	col = screen_collision(ball)
	if col.col then
		change_ball_dir(ball,col.plane)
	end

	p_col=player_collision(
 	player,ball) 
 	
 if p_col.col then
 		change_ball_dir(ball,p_col.plane)
 end
  	
 move_player(player)
 move_ball(ball)
  
end


function _draw()
	cls()
 spr(player.sprite,
 				player.x,
 				player.y
 			 )
 spr(ball.sprite,
 				ball.x,
 				ball.y
 			 )
 
end
-->8
-- movement --

function move_player(p)
	local c = screen_collision(p)
	if btn(⬆️) and c.plane ~= "up"
		then 
	 	p.y -= 1
	end
	if btn(⬇️) and c.plane ~= "down"
		then
			p.y += 1
	end
end

function set_ball_velocity(b)
	local t = deg2turn(b.dir)
	b.dx = cos(t) * b.speed
 b.dy = sin(t) * b.speed
end

function move_ball(b)
	set_ball_velocity(b)
	b.x += b.dx
	b.y += b.dy
end

function change_ball_dir(b, axis)
  b.dir = reflect_dir(b.dir, axis)
  set_ball_velocity(b)
end

function reflect_dir(old_dir, axis)
  if axis == "left"
  or axis == "right"
  then
    return (180 - old_dir) % 360
  elseif axis == "up"
  or axis == "down"
  then
    return (-old_dir) % 360
  end
end

-- collision --

function player_collision(
										p,r2
									 )
	if p.x < r2.x+r2.w
	and p.x + p.w + 1 > r2.x
	and p.y < r2.y + r2.h
	and p.y + p.h	> r2.y 
	then
		return ({plane="left", col=true})
	else
		return ({plane="", col=false})
	end
end

function screen_collision(obj)
	if obj.x+obj.w >= 127
		then
			return ({
				plane = "right",
				col = true
			})
	end
	if obj.x <= 0
		then
			return ({
				plane = "left",
				col = true
			})
	end
	if obj.y + obj.h >= 127
		then
			return ({
				plane = "down",
				col = true
			})
	end
	if obj.y <= 0
		then
			return ({
				plane = "up",
				col = true
			})
	end
	
	return ({
				plane = "",
				col = false
			})
end
-->8

-- math --

function deg2turn(deg)
  return (deg % 360) / 360
end

function rnd_sign()
	local n = rnd(1)
	if n > 0.5 then
		return 1
	else
		return -1
	end
end
	
__gfx__
00000000000770000000000077777777000000070000000770000000700000000000000077777777777777777777777700000000000000000000000000000000
00000000000770000077770077777777000000070000000770000000700000000000000000000000000000077000000000000000000000000000000000000000
00700700000770000777777077777777000000070000000770000000700000000000000000000000000000077000000000000000000000000000000000000000
00077000000770000777777077777777000000070000000770000000700000000000000000000000000000077000000000000000000000000000000000000000
00077000000770000777777077777777000000070000000770000000700000000000000000000000000000077000000000000000000000000000000000000000
00700700000770000777777077777777000000070000000770000000700000000000000000000000000000077000000000000000000000000000000000000000
00000000000770000077770077777777000000070000000770000000700000000000000000000000000000077000000000000000000000000000000000000000
00000000000770000000000077777777000000077777777770000000777777777777777700000000000000077000000000000000000000000000000000000000
__map__
0b09090909090909090909090909090a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
